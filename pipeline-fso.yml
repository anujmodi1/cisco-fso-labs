jobs:
- name: lab-prep
  plan:
  - get: git-resource
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: sconrod/python-aws
          tag: v2
        type: docker-image
      inputs:
      - name: git-resource
      platform: linux
      run:
        path: sh
        args:
          - -exc
          - |
            echo $AWS_KEY_ID
            echo $AWS_KEY
            export AWS_PAGER=""
            aws configure set aws_access_key_id $AWS_KEY_ID
            aws configure set aws_secret_access_key $AWS_KEY
            aws configure set default.region us-east-1
            aws sts get-caller-identity --query Account --output text
    task: check-aws
    params:
      AWS_KEY_ID: ((Access_key_ID.Access_key))
      AWS_KEY: ((Secret_access_key.Secret_access_key))

- name: deploy-aws-env
  plan:
    - get: git-resource
    - config:
        image_resource:
          name: ""
          source:
            repository: sconrod/python-aws
            tag: v2
          type: docker-image
        inputs:
          - name: git-resource
        platform: linux
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              cd git-resource
              export AWS_PAGER=""
              echo $AWS_KEY_ID
              echo $AWS_KEY
              export AWS_PAGER=""
              aws configure set aws_access_key_id $AWS_KEY_ID
              aws configure set aws_secret_access_key $AWS_KEY
              aws configure set default.region us-east-1
              aws sts get-caller-identity --query Account --output text
              export AWS_PAGER=""
              chmod a+x aws_key.sh
              chmod a+x aws_deploy.sh
              ./aws_key.sh
              ./aws_deploy.sh
      task: build-vpc
      params:
        AWS_KEY_ID: ((Access_key_ID.Access_key))
        AWS_KEY: ((Secret_access_key.Secret_access_key))

- name: deploy-csr1000v
  plan:
    - get: git-resource
    - config:
        image_resource:
          name: ""
          source:
            repository: sconrod/python-aws
            tag: v2
          type: docker-image
        inputs:
          - name: git-resource
        platform: linux
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              cd git-resource
              export AWS_PAGER=""
              aws configure set aws_access_key_id $AWS_KEY_ID
              aws configure set aws_secret_access_key $AWS_KEY
              aws configure set default.region us-east-1
              aws sts get-caller-identity --query Account --output text
              export AWS_PAGER=""
              chmod a+x csr_deploy.sh
              ./csr_deploy.sh
      task: build-csr1000v
      params:
        AWS_KEY_ID: ((Access_key_ID.Access_key))
        AWS_KEY: ((Secret_access_key.Secret_access_key))

- name: deploy-ubuntu-lan
  plan:
    - get: git-resource
    - config:
        image_resource:
          name: ""
          source:
            repository: sconrod/python-aws
            tag: v2
          type: docker-image
        inputs:
          - name: git-resource
        platform: linux
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              cd git-resource
              aws configure set aws_access_key_id $AWS_KEY_ID
              aws configure set aws_secret_access_key $AWS_KEY
              aws configure set default.region us-east-1
              aws sts get-caller-identity --query Account --output text
              export AWS_PAGER=""
              chmod a+x aws_ubuntu_lan_deploy.sh
              ./aws_ubuntu_lan_deploy.sh
      task: deploy-ubuntu-lan
      params:
        AWS_KEY_ID: ((Access_key_ID.Access_key))
        AWS_KEY: ((Secret_access_key.Secret_access_key))

- name: deploy-ubuntu-router
  plan:
    - get: git-resource
    - config:
        image_resource:
          name: ""
          source:
            repository: sconrod/python-aws
            tag: v2
          type: docker-image
        inputs:
          - name: git-resource
        platform: linux
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              cd git-resource
              aws configure set aws_access_key_id $AWS_KEY_ID
              aws configure set aws_secret_access_key $AWS_KEY
              aws configure set default.region us-east-1
              aws sts get-caller-identity --query Account --output text
              export AWS_PAGER=""
              chmod a+x aws_ubuntu_router_deploy.sh
              ./aws_ubuntu_router_deploy.sh
      task: deploy-ubuntu-router
      params:
        AWS_KEY_ID: ((Access_key_ID.Access_key))
        AWS_KEY: ((Secret_access_key.Secret_access_key))

- name: deploy-thousand-eyes
  plan:
    - get: git-resource
      passed: [deploy-ubuntu-router]
    - config:
        image_resource:
          name: ""
          source:
            repository: sconrod/python-aws
            tag: v2
          type: docker-image
        inputs:
          - name: git-resource
        platform: linux
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              cd git-resource
              aws configure set aws_access_key_id $AWS_KEY_ID
              aws configure set aws_secret_access_key $AWS_KEY
              aws configure set default.region us-east-1
              export AWS_PAGER=""
              chmod a+x aws_ubuntu_router_deploy.sh
              ./deploy-thousand-eyes-agent
      task: deploy-thousand-eyes

- name: deploy-app-dynamics
  plan:
    - get: git-resource
      passed: [deploy-ubuntu-lan]
    - config:
        image_resource:
          name: ""
          source:
            repository: sconrod/python-aws
            tag: v2
          type: docker-image
        inputs:
          - name: git-resource
        platform: linux
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              cd git-resource
              aws configure set aws_access_key_id $AWS_KEY_ID
              aws configure set aws_secret_access_key $AWS_KEY
              aws configure set default.region us-east-1
              export AWS_PAGER=""
              chmod a+x aws_ubuntu_router_deploy.sh
              ./deploy-app-dynamics
      task: deploy-app-dynamics

- name: deploy-intersight
  plan:
    - get: git-resource
    - config:
        image_resource:
          name: ""
          source:
            repository: sconrod/python-aws
            tag: v2
          type: docker-image
        inputs:
          - name: git-resource
        platform: linux
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              cd git-resource
              echo "under development"
      task: deploy-intersight

resource_types:
resources:
  - name: git-resource
    source:
      Username: ((Username))
      branch: ((git-branch))
      email: ((email))
      private_key: ((private_key))
      uri: ((git-uri))
    type: git
